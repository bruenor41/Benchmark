apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "benchmarkdos.doom"
        minSdkVersion 14
        targetSdkVersion 21

        ndk {
            moduleName "dosbox_main"
        }
    }

    sourceSets.main {
        jni.srcDirs = [] // This prevents the auto generation of Android.mk
        jniLibs.srcDir 'src/main/libs' // This is not necessary unless you have precompiled libraries in your project.
    }

    task buildNative(type: Exec, description: 'Compile JNI source via NDK') {
        commandLine "c:\\android-ndk\\ndk-build.cmd",
                '-C', file('src/main/jni').absolutePath, // Change src/main/jni the relative path to your jni source
                '-j', Runtime.runtime.availableProcessors(),
                'all',
                'NDK_DEBUG=0'
    }

    task cleanNative(type: Exec, description: 'Clean JNI object files') {
        commandLine "c:\\android-ndk\\ndk-build.cmd",
                '-C', file('src/main/jni').absolutePath, // Change src/main/jni the relative path to your jni source
                'clean'
    }

    clean.dependsOn 'cleanNative'

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn buildNative
    }

    buildTypes {
        debug {

        }

        release {

        }
    }
}

dependencies {
    api project(':magiclib')
}

/*
/*
apply plugin: 'com.android.model.application'

model {
    android {
        compileSdkVersion = 22
        buildToolsVersion = "22.0.1"

        defaultConfig.with {
            applicationId = "benchmarkdos.doom"
            minSdkVersion.apiLevel = 8
            targetSdkVersion.apiLevel = 22
        }
        android.ndk {
            moduleName "dosbox_main"
        }
        android.buildTypes {
            debug {
                jniDebuggable = true
            }
        }
        // Configures source set directory.
        android.sources {
            main {
                java {
                    source {
                        srcDir 'src'
                    }
                }
            }
        }
    }
}
*/